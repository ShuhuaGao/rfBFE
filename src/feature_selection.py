import pandas as pd
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import GridSearchCV


def random_forest_classification(x_train, y_train):
    params = {'n_estimators': [10, 20, 30, 50],
              'max_depth': [3],
              'min_samples_split': [2],
              }
    # k-fold cross validation based model selection
    kfold = 5
    grid_search = GridSearchCV(RandomForestClassifier(), params, cv=kfold,
                               n_jobs=-1, return_train_score=True)
    grid_search.fit(x_train, y_train)
    print('best params:')
    print(grid_search.best_params_)
    print('best score:')
    print(grid_search.best_score_)
    return grid_search.best_estimator_



def obtain_feature_importances(random_forest, features):
    """
    Get the feature importance generated by a trained random forest regressor.
    Return: a pandas.Series containing the importance for each feature
    """
    return pd.Series(random_forest.feature_importances_, index=features).sort_values(ascending=False)